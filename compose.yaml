version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: framadate_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - framadate_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ${DOCKER_FILE:-Dockerfile}
    container_name: framadate_backend
    environment:
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      API_PORT: ${BACK_PORT}
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    depends_on:
      - database
    networks:
      - framadate_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ${DOCKER_FILE:-Dockerfile}
    container_name: framadate_frontend
    environment:
      API_URL: ${API_URL}
      FRONTEND_PORT: ${FRONT_PORT}
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    depends_on:
      - backend
    networks:
      - framadate_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
    driver: local

networks:
  framadate_network:
    driver: bridge